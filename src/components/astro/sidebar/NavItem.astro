---
import type { Branch, Leaf } from "./utils/nav"
import {
  type ContentCollectionKey,
} from "astro:content"
import clsx from "clsx"

interface Props {
  collection: ContentCollectionKey
  items: (Branch | Leaf)[]
  nested: boolean
}

const { collection, items, nested } = Astro.props
---
{items.map((item) => (
    <>
    {(!("hidden" in item) || ("hidden" in item && item.hidden === false)) && (
        <li class={clsx("m-0 p-0", {"text-base font-medium":!nested, "text-sm":nested})}>
        {"children" in item ? (
            <>
            {item.hasIndex ? (
                <>
                <a href={`/${collection}/${item.indexSlug}`}
                class={clsx("opacity-70 flex items-center p-1 px-2 w-full text-gray-900 rounded-lg transition duration-75 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700",
                  {"open":item.isOpen}
                )}>{item.label}</a>
                {item.isOpen && <ul class={clsx("p-0 pl-2 space-y-0")}>
                    <Astro.self collection={collection} items={item.children} nested={true} />
                </ul>}
                </>
                
            ) : (
            <button
      type="button"
      class="flex items-center p-1 px-2 w-full text-gray-900 rounded-lg transition duration-75 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
      data-collapse-toggle={`dropdown-${item.segmentId}`}
      aria-controls={`dropdown-${item.segmentId}`}
    >
      <span class="flex-1 text-left whitespace-nowrap">{item.label}</span>
      <svg
        aria-hidden="true"
        class="w-6 h-6"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
          clip-rule="evenodd"></path>
      </svg>
    </button>
    <ul id={`dropdown-${item.segmentId}`} class={clsx("p-0 pl-2 space-y-0", {"hidden":!item.isOpen})}>
                    <Astro.self collection={collection} items={item.children} nested={true} />
                </ul>
            )}
            </>
        ) : (
        <a
          href={`/${collection}/${item.slug}`}
          class={clsx(
            "opacity-70 flex items-center p-1 px-2 w-full text-gray-900 rounded-lg transition duration-75 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700",
            {"current":item.active}
          )}
          >{item.label}</a
        >
        )}
    </li>
    )}
    
    </>
))}

<style>
  .current {
    color: theme(colors.gray.100);
    background-color: theme(colors.gray.400);
    opacity: 100;
  }
  .open {
    opacity: 100;
  }
</style>