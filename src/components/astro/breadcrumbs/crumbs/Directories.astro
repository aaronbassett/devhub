---
import type { Path, DocsEntry } from "@src/utils/routing/static-paths"
import { type ContentCollectionKey } from "astro:content"
import { type BaseContentCollection } from "@schemas/collections/content/base"
import { getCollection } from "astro:content"
import Link from "@components/astro/ui/link/Link.astro"
import { NavTree } from "@components/astro/sidebar/utils/nav"
import type { Tree, Branch, Leaf } from "@components/astro/sidebar/utils/nav"
import Directory from "./Directory.astro"
import clsx from "clsx"
import _ from "lodash"

interface Props {
  entry: DocsEntry
  paths: Path<DocsEntry>[]
}

const { entry, paths } = Astro.props

const segments = entry.id.split("/")
segments.pop() // remove filename
const directories: string[][] = []

if (segments.length >= 2) {
  // anything smaller is a content collection index page, no directories
  for (let i = 1; i <= segments.length; i++) {
    directories.push(segments.slice(0, i))
  }
}

const f = directories.length
---

{
  directories.map((directory) => (
    <Directory entry={entry} directory={directory} paths={paths} />
  ))
}
